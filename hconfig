#!/bin/bash
# AUTHOR: Pierre-Olivier VERSCHOORE (po.verschoore@gmail.com)
# V1.1 - 2013-02-14
# under GPL


# must run as root
[ "`whoami`" != "root" ] && echo "must be root to run this!" && exit 1

#INIT GLOBAL VARS
HOSTS_FILE=/etc/hosts
CONFIG_DIR=/etc/hconfig.d
BASE_CONF_FILE=$CONFIG_DIR/base-hosts.conf
STATUS_FILE=$CONFIG_DIR/status
DEFAULT_ENV=prod

# RUN VARS
ENV=""
CONF=""
BASE_MODE=0
NEXT_ARG=""


function print_usage {
	echo "hconfig is a /etc/hosts config switcher"
	echo "usage: hconfig [-h|--help|--usage] [-s|--status] [-b|--base] [[-e|--env <env>] -c|--conf <conf>]"
	echo "default action: equiv --help"
	echo
	echo "-h | --help | --usage: prints this help message and exits"
	echo "--init: initializes the configuration environements and default hosts file"
	echo "-s | --status: prints the last enabled configuration and exits"
	echo "-b | --base: sets the /etc/hosts to defaults by filling it with it's base-hosts.conf file then exits"
	echo "-e | --env: specifies whitch running environnement to use (dev/preprod/prod/custom) defaults to prod"
	echo "-c | --conf: specifies whitch conf file to use in the running environnement. no defaults"
}

function setBase {
	# base config
	echo "# GENERATED BY hconfig" > $HOSTS_FILE
	echo "# BASE config" >> $HOSTS_FILE
	cat $BASE_CONF_FILE >> $HOSTS_FILE
	echo "Base mode" > $STATUS_FILE
}

function setConfig {
	BASE_CONF_DIR=$1
	ENV=$2
	CONF=$3
	STATUS_FILE=$4

	if [ -f "$BASE_CONF_DIR/$ENV/$CONF" ]
	then
		echo >> $HOSTS_FILE
		echo "# ($ENV) $CONF" >> $HOSTS_FILE
		cat $BASE_CONF_DIR/$ENV/$CONF >> $HOSTS_FILE

		echo "($ENV) $CONF" > $STATUS_FILE
	fi
}



# read the arguments
if [ ${#@} -eq 0 ]
then
	# no args, print help and go out
	print_usage
	exit 0
fi

for arg in $@
do
	case $NEXT_ARG in
	"env")
		ENV=$arg
		NEXT_ARG=""
	;;
	"conf")
		CONF=$arg
		NEXT_ARG=""
	;;
	*)
		case $arg in
		"--init")
			mkdir -p $CONFIG_DIR/dev
			mkdir -p $CONFIG_DIR/preprod
			mkdir -p $CONFIG_DIR/prod

			cp $HOSTS_FILE $BASE_CONF_FILE

			exit 0;
		;;
		"-h"|"--help"|"--usage")
			print_usage
			exit 0
		;;
		"-s"|"--status")
			echo -n "last conf used: "
			cat $STATUS_FILE
			exit 0
		;;
		"-b"|"--base")
			# enable base mode other args will be ignored
			BASE_MODE=1
		;;
		"-e"|"--env")
			# set run env with next arg
			NEXT_ARG=env
		;;
		"-c"|"--conf")
			# set run conf with next arg
			NEXT_ARG=conf
		;;
		esac
	;;
	esac
done

# if not in BASE_MODE, add the additionnal conf
if [ $BASE_MODE -eq 0 ]
then
	if [ "X$ENV" = "X" ]
	then
		ENV=$DEFAULT_ENV
	fi
	setBase
	setConfig $CONFIG_DIR $ENV $CONF $STATUS_FILE
else
	setBase
fi
